>>>>>>>>>>>............<<<<<<<<<<<<<
Multiplication Table

// User function Template for C++
class Solution {
  public:
    vector<int> getTable(int n) {
        vector<int> table;
        for (int i = 1; i <= 10; i++) {
            table.push_back(n * i);
        }
        return table;
    }
};



>>>>>>>>>>>............<<<<<<<<<<<<<
Sum Of Digits


class Solution {
  public:
    int sumOfDigits(int n) {
        // code here
        int sum=0;
        while(n!=0)
        {
            int b=n%10;
            sum=sum+b;
            n=n/10;
        }
        return sum;
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<
All divisors of a Number
Input : n = 20
Output: 1 2 4 5 10 20


class Solution {
  public:
    void print_divisors(int n) {
        int i;
        
       vector<int> vec;
        for( i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
                vec.push_back(i);
               if(i!=n/i){
                   vec.push_back(n/i);
               }
            }
        }
        sort(vec.begin(),vec.end());
        
        for(int res : vec){
            cout<<res<<" ";
        }
        
        
        
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<

Enter your number for Reverse :123
Reverse is :321  
class Solution {
public:
    int reverse(int x) {
        long long rev =0;
        while(x!=0)
        {
           long long b=x%10;
            rev=rev*10+b;
            x=x/10;
            if (rev > INT_MAX || rev < INT_MIN) {
                return 0;
            }
        }
        return (int)rev;
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<
Find Number is Armstrong Numbers

// User function Template for C++
class Solution {
  public:
    bool armstrongNumber(int n) {
        // code here
        int sum=0,b,num;
        num=n;
        while(n!=0)
        {
            b=n%10;
            sum=sum+(b*b*b);
            n=n/10;
        }
        if(num==sum)
        return true;
        else return false;
    }
};



>>>>>>>>>>>............<<<<<<<<<<<<<
Check is Number is Prime Number

class Solution {
  public:
    bool isPrime(int n) {
        // code here
        int count=0;
        if(n>=2)
        {
        for(int i=2;i<=n/2;i++)
        {
            if(n%i==0)
            {
            count++;
            if(count>0)
            {
                return false;
                break;
            }
            }
        }
        if(count==0)
       { return true;}
        else return false;
        }
        else return false;
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<
Find LCM of two Number
// User function Template for C++

int LCM(int a, int b) {

    // write your code here
    for(int i=1;i>0;i++)
    {
        if(i%a==0 && i%b==0)
        {
            return i;
            break;
        }
    }
    // return LCM of a and b
}




>>>>>>>>>>>............<<<<<<<<<<<<<
Find HCF of two Number
class Solution {
  public:
    int gcd(int a, int b) {
        // code here
       while(b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<
Find day of the week for a given date
d = 28, m = 12, y = 1995
Output:
Thursday


class Solution {
  public:
    string getDayOfWeek(int d, int m, int y) {
        
        if (m == 1) {
            m = 13;
            y--;
        } else if (m == 2) {
            m = 14;
            y--;
        }

        int K = y % 100;   
        int J = y / 100;   

        int h = (d + (13 * (m + 1)) / 5 + K + K / 4 + J / 4 + 5 * J) % 7;

       
        string days[] = {"Saturday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};

        return days[h];
    }
};
