>>>>>>>>>>>............<<<<<<<<<<<<<
All divisors of a Number
Input : n = 20
Output: 1 2 4 5 10 20


class Solution {
  public:
    void print_divisors(int n) {
        int i;
        
       vector<int> vec;
        for( i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
                vec.push_back(i);
               if(i!=n/i){
                   vec.push_back(n/i);
               }
            }
        }
        sort(vec.begin(),vec.end());
        
        for(int res : vec){
            cout<<res<<" ";
        }
        
        
        
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<

Enter your number for Reverse :123
Reverse is :321  
class Solution {
public:
    int reverse(int x) {
        long long rev =0;
        while(x!=0)
        {
           long long b=x%10;
            rev=rev*10+b;
            x=x/10;
            if (rev > INT_MAX || rev < INT_MIN) {
                return 0;
            }
        }
        return (int)rev;
    }
};


>>>>>>>>>>>............<<<<<<<<<<<<<
Find Number is Armstrong Numbers

// User function Template for C++
class Solution {
  public:
    bool armstrongNumber(int n) {
        // code here
        int sum=0,b,num;
        num=n;
        while(n!=0)
        {
            b=n%10;
            sum=sum+(b*b*b);
            n=n/10;
        }
        if(num==sum)
        return true;
        else return false;
    }
};
